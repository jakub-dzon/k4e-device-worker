// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-flotta/flotta-device-worker/internal/ansible/mapping (interfaces: MappingRepository)

// Package mapping is a generated GoMock package.
package mapping

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockMappingRepository is a mock of MappingRepository interface.
type MockMappingRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMappingRepositoryMockRecorder
}

// MockMappingRepositoryMockRecorder is the mock recorder for MockMappingRepository.
type MockMappingRepositoryMockRecorder struct {
	mock *MockMappingRepository
}

// NewMockMappingRepository creates a new mock instance.
func NewMockMappingRepository(ctrl *gomock.Controller) *MockMappingRepository {
	mock := &MockMappingRepository{ctrl: ctrl}
	mock.recorder = &MockMappingRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMappingRepository) EXPECT() *MockMappingRepositoryMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockMappingRepository) Add(arg0 []byte, arg1 time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockMappingRepositoryMockRecorder) Add(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockMappingRepository)(nil).Add), arg0, arg1)
}

// Exists mocks base method.
func (m *MockMappingRepository) Exists(arg0 time.Time) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Exists", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Exists indicates an expected call of Exists.
func (mr *MockMappingRepositoryMockRecorder) Exists(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Exists", reflect.TypeOf((*MockMappingRepository)(nil).Exists), arg0)
}

// GetAll mocks base method.
func (m *MockMappingRepository) GetAll() map[int]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].(map[int]string)
	return ret0
}

// GetAll indicates an expected call of GetAll.
func (mr *MockMappingRepositoryMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockMappingRepository)(nil).GetAll))
}

// GetFilePath mocks base method.
func (m *MockMappingRepository) GetFilePath(arg0 time.Time) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFilePath", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFilePath indicates an expected call of GetFilePath.
func (mr *MockMappingRepositoryMockRecorder) GetFilePath(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFilePath", reflect.TypeOf((*MockMappingRepository)(nil).GetFilePath), arg0)
}

// GetModTime mocks base method.
func (m *MockMappingRepository) GetModTime(arg0 string) int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetModTime", arg0)
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetModTime indicates an expected call of GetModTime.
func (mr *MockMappingRepositoryMockRecorder) GetModTime(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetModTime", reflect.TypeOf((*MockMappingRepository)(nil).GetModTime), arg0)
}

// GetSha256 mocks base method.
func (m *MockMappingRepository) GetSha256(arg0 []byte) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSha256", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSha256 indicates an expected call of GetSha256.
func (mr *MockMappingRepositoryMockRecorder) GetSha256(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSha256", reflect.TypeOf((*MockMappingRepository)(nil).GetSha256), arg0)
}

// Persist mocks base method.
func (m *MockMappingRepository) Persist() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Persist")
	ret0, _ := ret[0].(error)
	return ret0
}

// Persist indicates an expected call of Persist.
func (mr *MockMappingRepositoryMockRecorder) Persist() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Persist", reflect.TypeOf((*MockMappingRepository)(nil).Persist))
}

// Remove mocks base method.
func (m *MockMappingRepository) Remove(arg0 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockMappingRepositoryMockRecorder) Remove(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockMappingRepository)(nil).Remove), arg0)
}

// RemoveMappingFile mocks base method.
func (m *MockMappingRepository) RemoveMappingFile() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveMappingFile")
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveMappingFile indicates an expected call of RemoveMappingFile.
func (mr *MockMappingRepositoryMockRecorder) RemoveMappingFile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveMappingFile", reflect.TypeOf((*MockMappingRepository)(nil).RemoveMappingFile))
}

// Size mocks base method.
func (m *MockMappingRepository) Size() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Size")
	ret0, _ := ret[0].(int)
	return ret0
}

// Size indicates an expected call of Size.
func (mr *MockMappingRepositoryMockRecorder) Size() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Size", reflect.TypeOf((*MockMappingRepository)(nil).Size))
}
